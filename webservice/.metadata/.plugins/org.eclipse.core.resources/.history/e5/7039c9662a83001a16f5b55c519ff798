package com.arzds.security;

import java.io.IOException;
import java.lang.reflect.Method;

import javax.annotation.security.DenyAll;
import javax.ws.rs.container.ContainerRequestContext;
import javax.ws.rs.container.ContainerRequestFilter;
import javax.ws.rs.container.ResourceInfo;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.HttpHeaders;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

public class SecurityFilterImpl implements ContainerRequestFilter {
	@Context
	private ResourceInfo resource;
	@Context
	private HttpHeaders head;

	@Override
	public void filter(ContainerRequestContext requestContext) throws IOException {
		// TODO Auto-generated method stub
		Method method = resource.getResourceMethod();
if(!method.isAnnotationPresent(DenyAll.class)) {
	requestContext.abortWith(Response.ok("This Request can be processed").status(Status.FORBIDDEN).build());
}
		
	}

}
